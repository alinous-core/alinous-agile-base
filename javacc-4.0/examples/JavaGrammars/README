
/*
 * Copyright Â© 2002 Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * California 95054, U.S.A. All rights reserved.  Sun Microsystems, Inc. has
 * intellectual property rights relating to technology embodied in the product
 * that is described in this document. In particular, and without limitation,
 * these intellectual property rights may include one or more of the U.S.
 * patents listed at http://www.sun.com/patents and one or more additional
 * patents or pending patent applications in the U.S. and in other countries.
 * U.S. Government Rights - Commercial software. Government users are subject
 * to the Sun Microsystems, Inc. standard license agreement and applicable
 * provisions of the FAR and its supplements.  Use is subject to license terms.
 * Sun,  Sun Microsystems,  the Sun logo and  Java are trademarks or registered
 * trademarks of Sun Microsystems, Inc. in the U.S. and other countries.  This
 * product is covered and controlled by U.S. Export Control laws and may be
 * subject to the export or import laws in other countries.  Nuclear, missile,
 * chemical biological weapons or nuclear maritime end uses or end users,
 * whether direct or indirect, are strictly prohibited.  Export or reexport
 * to countries subject to U.S. embargo or to entities identified on U.S.
 * export exclusion lists, including, but not limited to, the denied persons
 * and specially designated nationals lists is strictly prohibited.
 */

This directory contains a bunch of Java grammars:

Java1.0.2.jj:
	This is our most thoroughly tested Java grammar.  It is a
	faithful rendering of the language syntax as specified by the
	Java Language Specification by Gosling, Joy, and Steele.

Java.1.0.2LS.jj:
	This is a minor modification of Java1.0.2.jj which uses
	lexical states to express the comment tokens.  While this is a
	cleaner grammar, it has not been tested as thoroughly as the
	previous grammar.  Over time, we will make this grammar our
	primary grammar and delete Java1.0.2.jj.

Java1.1.jj:
	This is the grammar that includes the Java 1.1 language
	extensions.  It is based on the Java Language Specification
	by Gosling, Joy, and Steele augmented by the inner class
	document released with JDK 1.1.

Java1.1noLA.jj:
	Same as Java1.1.jj, but all explicit syntactic lookaheads
	are replaced by semantic lookaheads to minimize the space
	requirements of the generated parser.  To do the same kind
	of optimization for your grammar, please see file OPTIMIZING
	in this directory.

To build a parser from a .jj file, simply type:

  "javacc <grammar-file>"

in this directory.  The files that comprise the Java parser are
generated into this directory.

Compile these files using "javac".

JavaParser.java contains a main program that takes input from either
the standard input or from the file specified as the argument to
"java".  i.e., A Java program can be parser in either of the following
ways:

  java JavaParser < javafile
  java JavaParser javafile
